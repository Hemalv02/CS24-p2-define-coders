datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id             String  @id @default(uuid())
    username       String  @unique
    email          String  @unique
    hashedPassword String
    profileName    String?
    profileImage   String?
    role           Role    @relation(fields: [roleName], references: [name], onDelete: Cascade)
    roleName       String  @default("UNASSIGNED")
    sts            STS?    @relation(fields: [stsId], references: [id], onDelete: Cascade)
    stsId          String?

    landfill   Landfill? @relation(fields: [landfillId], references: [id], onDelete: Cascade)
    landfillId String?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([username], name: "username_index")
    @@index([email], name: "email_index")
}

model Role {
    id          String  @id @default(uuid())
    name        String  @unique
    description String?
    User        User[]

    permissions Permission[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Permission {
    id          String  @id @default(uuid())
    name        String  @unique
    description String?
    roles       Role[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Vehicle {
    id                    String   @id @default(uuid())
    vehicleNumber         String   @unique
    vehicleType           String
    capacity              Decimal  @db.Decimal(10, 2)
    loadedFuelCostPerKm   Decimal  @db.Decimal(10, 2)
    unloadedFuelCostPerKm Decimal  @db.Decimal(10, 2)
    currentLatitude       Decimal?
    currentLongitude      Decimal?

    landFill   Landfill @relation(fields: [landFillId], references: [id], onDelete: Cascade)
    landFillId String
    sts        STS      @relation(fields: [stsId], references: [id], onDelete: Cascade)
    stsId      String

    duration Decimal? @db.Decimal(10, 2)
    distance Decimal? @db.Decimal(10, 2)

    STSVehicleEntry      STSVehicleEntry[]
    LandfillVehicleEntry LandfillVehicleEntry[]
    Bill                 Bill[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    Trip      Trip[]
}

model STS {
    id                String    @id @default(uuid())
    name              String?
    wardNumber        String?
    capacity          Decimal?  @db.Decimal(10, 2)
    currentTotalWaste Decimal?  @db.Decimal(10, 2)
    latitude          Decimal
    longitude         Decimal
    Vehicle           Vehicle[]

    STSVehicleEntry STSVehicleEntry[]
    manager         User[]
    Trip            Trip[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    Bill      Bill[]
}

model Landfill {
    id                  String   @id @default(uuid())
    name                String?
    capacity            Decimal? @db.Decimal(10, 2)
    currentTotalWaste   Decimal? @db.Decimal(10, 2)
    operationalTimeSpan String? // ask about this
    latitude            Decimal
    longitude           Decimal

    LandfillVehicleEntry LandfillVehicleEntry[]
    manager              User[]
    Trip                 Trip[]

    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    Bill      Bill[]
    Vehicle   Vehicle[]
}

model STSVehicleEntry {
    id            String    @id @default(uuid())
    sts           STS       @relation(fields: [stsId], references: [id], onDelete: Cascade)
    stsId         String
    vehicle       Vehicle   @relation(fields: [vehicleId], references: [id], onDelete: Cascade)
    vehicleId     String
    weightOfWaste Decimal?  @db.Decimal(10, 2)
    entryTime     DateTime?
    exitTime      DateTime?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model LandfillVehicleEntry {
    id            String    @id @default(uuid())
    landfill      Landfill  @relation(fields: [landfillId], references: [id], onDelete: Cascade)
    landfillId    String
    vehicle       Vehicle   @relation(fields: [vehicleId], references: [id], onDelete: Cascade)
    vehicleId     String
    weightOfWaste Decimal?  @db.Decimal(10, 2)
    entryTime     DateTime?
    exitTime      DateTime?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Bill {
    id        String  @id @default(uuid())
    billNo    Int     @unique @default(autoincrement())
    vehicle   Vehicle @relation(fields: [vehicleId], references: [id], onDelete: Cascade)
    vehicleId String
    sts       STS     @relation(fields: [stsId], references: [id], onDelete: Cascade)
    stsId     String

    landfill   Landfill @relation(fields: [landfillId], references: [id], onDelete: Cascade)
    landfillId String

    trip   Trip?   @relation(fields: [tripId], references: [id], onDelete: Cascade)
    tripId String?

    weightOfWaste     Decimal? @db.Decimal(10, 2)
    allocatedFuelCost Decimal? @db.Decimal(10, 2)

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Trip {
    id         String   @id @default(uuid())
    sts        STS      @relation(fields: [stsId], references: [id], onDelete: Cascade)
    stsId      String
    landfill   Landfill @relation(fields: [landfillId], references: [id], onDelete: Cascade)
    landfillId String
    vehicle    Vehicle  @relation(fields: [vehicleId], references: [id], onDelete: Cascade)
    vehicleId  String

    tripStartTime     DateTime?
    tripEndTime       DateTime?
    weightOfWaste     Decimal?  @db.Decimal(10, 2)
    shortage          Decimal?  @db.Decimal(10, 2)
    estimatedFuelCost Decimal?  @db.Decimal(10, 2)

    distance          Decimal? @db.Decimal(10, 2)
    estimatedDuration Decimal? @db.Decimal(10, 2)
    actualDuration    Decimal? @db.Decimal(10, 2)

    tripStatus String?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    Bill      Bill[]
}
